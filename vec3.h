#pragma once

#include <math.h>
#include <stdexcept>
using namespace std;

//Представляет вектор в трехмерном пространстве.
class vec3
{
public:
	union
	{
		struct
		{
			//Компонента вектора.
			double x, y, z;
		};

		//Компоненты вектора.
		double components[3];
	};

	//Создает экземпляр vec3 и инициализирует его поля значениями по умолчанию.
	vec3();

	//Создает экземпляр vec3 и инициализирует его поля указанными значениями.
	vec3(double x, double y, double z);

	//Возвращает сумму данного и указанного векторов.
	vec3 add(vec3& other);

	//Возвращает разность данного и указанного векторов.
	vec3 subtract(vec3& other);

	//Возвращает произведение на число данного вектора.
	vec3 multiply(double scalar);

	//Возвращает скалярное произведение данного и указанного векторов.
	double dot_product(vec3& other);

	//Возвращает векторное произведение данного и указанного векторов.
	vec3 cross_product(vec3& other);

	//Возвращает вторую норму (длину) вектора.
	double norm();

	//Возвращает орт данного вектора.
	vec3 normalize();

	//Возвращает сумму данного и указанного векторов.
	vec3 operator+(vec3& other);

	//Возвращает разность данного и указанного векторов.
	vec3 operator-(vec3& other);

	//Возвращает произведение на число данного вектора.
	vec3 operator*(double scalar);

	//Возвращает скалярное произведение данного и указанного векторов.
	double operator*(vec3& other);

	//Возвращает векторное произведение данного и указанного векторов.
	vec3 operator^(vec3& other);

	//Возвращает указанную компоненту вектора.
	double& operator[](int ind);

	//Выполняет присванивание указанного вектора данному.
	vec3& operator=(vec3& other);

private:
	//Допустимая погрешность вычислений.
	const double e = 1e-9;

	//Размер пространства вектора.
	const int size = 3;
};