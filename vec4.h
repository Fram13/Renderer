#pragma once

#include <math.h>
#include <stdexcept>
using namespace std;

//Представляет вектор в четырехмерном пространстве.
class vec4
{
public:
	union
	{
		struct
		{
			//Компонента вектора.
			float x, y, z, w;
		};

		//Компоненты вектора.
		float raw[4];
	};

	//Создает экземпляр vec4 и инициализирует его поля значениями по умолчанию.
	vec4();

	//Создает экземпляр vec4 и инициализирует его поля указанными значениями.
	vec4(float x, float y, float z, float w);

	//Возвращает сумму данного и указанного векторов.
	vec4 add(vec4& other);

	//Возвращает разность данного и указанного векторов.
	vec4 subtract(vec4& other);

	//Возвращает произведение на число данного вектора.
	vec4 multiply(float scalar);

	//Возвращает скалярное произведение данного и указанного векторов.
	float dot_product(vec4& other);

	//Возвращает вторую норму (длину) вектора.
	float norm();

	//Возвращает орт данного вектора.
	vec4 normalize();

	//Возвращает сумму данного и указанного векторов.
	vec4 operator+(vec4& other);

	//Возвращает разность данного и указанного векторов.
	vec4 operator-(vec4& other);

	//Возвращает произведение на число данного вектора.
	vec4 operator*(float scalar);

	//Возвращает скалярное произведение данного и указанного векторов.
	float operator*(vec4& other);

	//Возвращает указанную компоненту вектора.
	float& operator[](int ind);

	//Выполняет присванивание указанного вектора данному.
	vec4& operator=(vec4& other);

private:
	//Допустимая погрешность вычислений.
	const float e = 1e-9f;

	//Размер пространства вектора.
	const int size = 4;
};